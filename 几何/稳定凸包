Point p[1010],stk[1010];
int Andrew(){
    sort(p+1,p+n+1);
    int len=0;
    for (int i=1;i<=n;i++){
        while (len>1&&sgn((stk[len]-stk[len-1])^(p[i]-stk[len-1]))<0) len--;
        stk[++len]=p[i];
    }
    int k=len;
    for (int i=n-1;i>=1;i--){
        while (len>k&&sgn((stk[len]-stk[len-1])^(p[i]-stk[len-1]))<0) len--;
        stk[++len]=p[i];
    }
    len--;
    return len;
}
void solve(){
    if(n<6){
        printf("NO\n");
        return ;
    }
    int len=Andrew();
    stk[0]=stk[len];
    stk[len+1]=stk[1];
    stk[len+2]=stk[2];
    for(int i=1;i<=len;i++){
        if(sgn((stk[i+2]-stk[i])^(stk[i+1]-stk[i]))==0||
            sgn((stk[i+1]-stk[i-1])^(stk[i]-stk[i-1]))==0)
            continue;
        printf("NO\n");
        return;
    }
    printf("YES\n");
}
