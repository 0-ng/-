double rota(int n){
    Vector v;
    int up=2;
    int left=2;
    int right=2;
    double ret=1e15;
    for(int down=1;down<=n;down++) {

        v = stk[down + 1] - stk[down];
        while (sgn(v ^ (stk[up + 1] - stk[up])) >= 0)
            up = up % n + 1;

        while(cmp(v*(stk[right]-stk[down]),
                  v*(stk[right+1]-stk[down]))<=0)
            right=right%n+1;

        left=up%n+1;
        while(cmp((stk[left]-stk[down+1])*(stk[down]-stk[down+1]),
                  (stk[left+1]-stk[down+1])*(stk[down]-stk[down+1]))<=0)
            left=left%n+1;

        double h=fabs(v^(stk[up]-stk[down]))/v.len();
        double w1=fabs((stk[left]-stk[down])*(stk[down]-stk[down+1]))/v.len();
        double w2=fabs(v*(stk[right]-stk[down]))/v.len();
        double w=(w1+w2);
        double tmp=h*w;
        if(tmp<ret){
            ret=tmp;
            ans[0]=stk[down]-(v*w1/v.len());//矩形四个点
            ans[1]=stk[down]+(v*w2/v.len());
            Vector vvv=v.rotLeft()/v.len();
            ans[2]=ans[1]+vvv*h;
            ans[3]=ans[0]+vvv*h;
        }
    }
    return ret;//面积
}
void solve(){
    int len=Andrew();
    printf("%.0f\n",rota(len));
}
