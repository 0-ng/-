vector<int>vec[MAXN];
int dfn[MAXN],low[MAXN];
int cuo;
bool vis[MAXN];
void dfs(int now,int fa){
    dfn[now]=low[now]=++cuo;
    int son=0;
    for(auto i:vec[now]){
        if(!dfn[i]){
            dfs(i,fa);
            low[now]=min(low[now],low[i]);
            if(low[i]>=dfn[now]&&now!=fa)
                vis[now]=true;
            if(now==fa)
                son++;
        }
        low[now]=min(low[now],dfn[i]);
    }
    if(son>=2&&now==fa)
        vis[now]=true;
}
void solve(){
    for(int i=1;i<=n;i++){
        if(dfn[i])continue;
        dfs(i,i);
    }
    int ans=0;
    for(int i=1;i<=n;i++)
        if(vis[i])ans++;
    printf("%d\n",ans);
    for(int i=1;i<=n;i++)
        if(vis[i])
            printf("%d ",i);
}
void init(){
    scanf("%d%d",&n,&m);
    for(int i=1,u,v;i<=m;i++){
        scanf("%d%d",&u,&v);
        vec[u].push_back(v);
        vec[v].push_back(u);
    }
}
