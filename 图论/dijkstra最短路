struct Edge{
    int to;
    long long dis;
    bool operator<(Edge e)const{
        return dis>e.dis;
    }
};
long long dis[MAXN];
bool vis[MAXN];
void dijkstra(int s){
    for(int i=1;i<=n;i++)
        dis[i]=1e9;
    memarray(vis,false);
    priority_queue<Edge>pq;
    pq.push({s,0});
    dis[s]=0;
    while(!pq.empty()){
        Edge now=pq.top();pq.pop();
        int u=now.to;
        if(vis[u])continue;
        vis[u]=true;
        for(int v=1;v<=n;v++){
            if(vis[v])continue;
            if(dis[v]>dis[u]+Map[u][v]){
                dis[v]=dis[u]+Map[u][v];
                pq.push({v,dis[v]});
            }
        }
    }
}
