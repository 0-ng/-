https://blog.csdn.net/GGN_2015/article/details/80785621
https://www.cnblogs.com/zyxStar/p/4591897.html
C - Quoit Design HDU - 1007 

bool cmpXY(Point& p1,Point& p2){
    if(cmp(p1.x,p2.x)==0) return p1.y<p2.y;
    return p1.x<p2.x;
}
bool cmpY(int& a,int& b){
    return p[a].y<p[b].y;
}
int mpt[MAXN];
double Closest_Pair(int left, int right){
    double d = 0x3f3f3f3f;
    if (left == right)
        return d;
    if (left + 1 == right)
        return p[left].disToPoint(p[right]);
    int mid = (left + right) >> 1;
    double d1 = Closest_Pair(left, mid);
    double d2 = Closest_Pair(mid + 1, right);
    d = min(d1, d2);
    int i, j, k = 0;
    //分离出宽度为d的区间
    for (i = left; i <= right; i++){
        if (fabs(p[mid].x - p[i].x) <= d)
            mpt[k++] = i;
    }
    sort(mpt, mpt + k, cmpY);
    //线性扫描
    for (i = 0; i < k; i++){
        for (j = i + 1; j < k && p[mpt[j]].y - p[mpt[i]].y<d; j++){
            double d3 = p[mpt[i]].disToPoint(p[mpt[j]]);
            if (d > d3)    d = d3;
        }
    }
    return d;
}
void solve(){
    sort(p+1,p+n+1, cmpXY);
    printf("%.2f\n",Closest_Pair(1,n)/2);
}
