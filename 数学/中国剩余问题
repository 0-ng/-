int a[10],b[10];
long long qmod(long long a,long long b,long long mod){
    long long ret=0;
    while(b){
        if(b&1)
            ret=(ret+a)%mod;
        a=(a+a)%mod;
        b>>=1;
    }
    return ret;
}
long long exgcd(long long a,long long b,long long &x,long long &y){
    if(b==0){
        x=1,y=0;
        return a;
    }
    long long gcd=exgcd(b,a%b,x,y);
    long long t=y;
    y=x-(a/b)*y;
    x=t;
    return gcd;
}
long long china(){
    long long m=a[1],ans=b[1],x,y;
    for(int i=2;i<=n;i++){
        long long c=(b[i]-ans%a[i]+a[i])%a[i];
        long long gcd=exgcd(m,a[i],x,y);
        long long ag=a[i]/gcd;
        if(c%gcd!=0) return -1;
        x=qmod(x,c/gcd,ag);
        ans+=x*m;
        m*=ag;
        ans=(ans%m+m)%m;
    }
    return ans>0?ans:ans+m;
}
void solve(){
    printf("%lld\n",china());
}
void init(){
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
        scanf("%d",&a[i]);
    for(int i=1;i<=n;i++)
        scanf("%d",&b[i]);
}
------------------------------------------
int m[10],a[10];
int gcd(int a,int b){
    return b?gcd(b,a%b):a;
}
void exgcd(int a,int b,int &d,int &x,int &y){
    if(!b) d=a,x=1,y=0;
    else exgcd(b,a%b,d,y,x),y-=x*(a/b);
}
int china(){
    int x,y,d,A=a[1],M=m[1];
    for(int i=2;i<=n;i++){
        exgcd(M,m[i],d,x,y);
        if((a[i]-A)%d) return -1;
        x=(a[i]-A)/d*x%(m[i]/d);
        A+=x*M;
        M=M/d*m[i];
        A%=M;
    }
    return A>0?A:A+M;
}
void solve(){
    printf("%d\n",china());
}
void init(){
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
        scanf("%d",&m[i]);
    for(int i=1;i<=n;i++)
        scanf("%d",&a[i]);
}
